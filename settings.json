{
  // "editor.tabCompletion": "on",
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports": "explicit"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "codeium.enableConfig": {
    "*": false
  },
  "[caddyfile]": {
    "editor.insertSpaces": false,
    "editor.formatOnSave": true
  },
  "emmet.includeLanguages": {
    "html": "pug"
  },
  "[handlebars]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "redhat.telemetry.enabled": false,
  "prisma.showPrismaDataPlatformNotification": false,
  "prettier.requireConfig": true,
  "git.openRepositoryInParentFolders": "never",
  "editor.linkedEditing": true,

  "editor.lineNumbers": "relative",
  // vim setup
  // VS Code automatically highlights selected words.
  // "vim.hlsearch": false,
  "vim.leader": "<Space>",
  "vim.timeout": 200,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["k", "j"],
      "after": ["<Esc>", "l"]
    }
  ],
  "vim.insertModeKeyBindingsNonRecursive": [
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["v", "n"],
      "after": ["v", "g", "_", "y"]
    },
    {
      // find the source definition instead of the .d.ts file
      // 'f'ind the source 'd'efinition
      "before": ["f", "d"],
      "commands": ["typescript.goToSourceDefinition"]
    },
    {
      // df is easier to hit than gd
      // go to the 'd'e'f'inition
      "before": ["d", "f"],
      "after": ["g", "d"]
    },
    {
      "before": ["d", "n"],
      "after": ["d", "g", "_"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },

    // splits
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "s"], "commands": [":split"] },

    // panes
    {
      "before": ["leader", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["leader", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["leader", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["leader", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },

    // File tree
    {
      "before": ["leader", "n", "e"],
      "commands": ["workbench.explorer.fileView.focus"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    { "before": ["leader", "p"], "commands": ["workbench.action.quickOpen"] },
    { "before": ["leader", "f"], "commands": ["editor.action.formatDocument"] },
    {
      "before": ["g", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    }
  ], 
  "vim.visualModeKeyBindings": [
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    // toggle comment selection
    { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] }
  ],
  // vim mode viwy viwcmd+d p issue hack
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["p"],
      "commands": ["editor.action.clipboardPasteAction"]
    }
  ]
}
